# OIF Solver Configuration - Main File

include = [
    "demo/networks.toml",
    "demo/api.toml",
    "demo/cli.toml",
    "demo/gas.toml",
]

[solver]
id = "oif-solver-demo"
monitoring_timeout_minutes = 5
min_profitability_pct = 1.0

# ============================================================================
# STORAGE
# ============================================================================
[storage]
primary = "file"
cleanup_interval_seconds = 60

[storage.implementations.memory]
# Memory storage has no configuration

[storage.implementations.file]
storage_path = "./data/storage"
ttl_orders = 300                # 5 minutes
ttl_intents = 120               # 2 minutes
ttl_order_by_tx_hash = 300      # 5 minutes

# ============================================================================
# ACCOUNT
# ============================================================================
[account]
primary = "local"

[account.implementations.local]
private_key = "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"

# ============================================================================
# DELIVERY
# ============================================================================
[delivery]
min_confirmations = 1

[delivery.implementations.evm_alloy]
network_ids = [31337, 31338]

# ============================================================================
# DISCOVERY
# ============================================================================
[discovery]

[discovery.implementations.onchain_eip7683]
network_ids = [31337, 31338]
polling_interval_secs = 0    # Use WebSocket subscriptions instead of polling

[discovery.implementations.offchain_eip7683]
api_host = "127.0.0.1"
api_port = 8081
network_ids = [31337]

# ============================================================================
# ORDER
# ============================================================================
[order]

[order.implementations.eip7683]

[order.strategy]
primary = "simple"

[order.strategy.implementations.simple]
max_gas_price_gwei = 100

# ============================================================================
# PRICING
# ============================================================================
[pricing]
primary = "coingecko"

[pricing.implementations.mock]
# Uses default ETH/USD price of 4615.16

[pricing.implementations.coingecko]
# Free tier configuration (no API key required)
# api_key = "CG-YOUR-API-KEY-HERE"
cache_duration_seconds = 60
rate_limit_delay_ms = 1200

# Custom prices for demo/test tokens (in USD)
[pricing.implementations.coingecko.custom_prices]
TOKA = "200.00"
TOKB = "195.00"

# ============================================================================
# SETTLEMENT
# ============================================================================
[settlement]

[settlement.domain]
chain_id = 1
address = "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0"

[settlement.implementations.direct]
order = "eip7683"
network_ids = [31337, 31338]
dispute_period_seconds = 1
# Oracle selection strategy when multiple oracles are available (First, RoundRobin, Random)
oracle_selection_strategy = "First"

# Oracle configuration with multiple oracle support
[settlement.implementations.direct.oracles]
# Input oracles (on origin chains)
input = { 31337 = [
    "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
], 31338 = [
    "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
] }
# Output oracles (on destination chains)
output = { 31337 = [
    "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
], 31338 = [
    "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
] }

# Valid routes: from origin chain -> to destination chains
[settlement.implementations.direct.routes]
31337 = [31338] # Can go from origin to destination
31338 = [31337] # Can go from destination to origin

# ============================================================================
# HYPERLANE SETTLEMENT (For cross-chain messaging)
# ============================================================================
[settlement.implementations.hyperlane]
order = "eipXXXX"
network_ids = [31337, 31338]
# Default gas limit for Hyperlane messages
default_gas_limit = 500000
message_timeout_seconds = 600
finalization_required = false # For local testing

# Oracle addresses for Hyperlane (different from direct to avoid conflicts)
# Use a different oracle address to ensure Direct settlement is used for local demo
[settlement.implementations.hyperlane.oracles]
input = { 31337 = [
    "0x0000000000000000000000000000000000000999",
], 31338 = [
    "0x0000000000000000000000000000000000000999",
] }
output = { 31337 = [
    "0x0000000000000000000000000000000000000999",
], 31338 = [
    "0x0000000000000000000000000000000000000999",
] }

[settlement.implementations.hyperlane.routes]
31337 = [31338]
31338 = [31337]

# Mailbox addresses (mock for local testing)
[settlement.implementations.hyperlane.mailboxes]
31337 = "0x0000000000000000000000000000000000000001" # Mock mailbox for local
31338 = "0x0000000000000000000000000000000000000001" # Mock mailbox for local

# IGP addresses (mock for local testing)
[settlement.implementations.hyperlane.igp_addresses]
31337 = "0x0000000000000000000000000000000000000002" # Mock IGP for local
31338 = "0x0000000000000000000000000000000000000002" # Mock IGP for local
