# OIF Solver Configuration - Testnet USDC Setup

include = [
    "testnet/networks.toml",
    "testnet/api.toml"
]

[solver]
id = "oif-solver-testnet-usdc"
monitoring_timeout_minutes = 5
min_profitability_pct = 1.0

# ============================================================================
# STORAGE
# ============================================================================
[storage]
primary = "file"
cleanup_interval_seconds = 3600

[storage.implementations.memory]
# Memory storage has no configuration

[storage.implementations.file]
storage_path = "./data/storage"
ttl_orders = 0                  # Permanent
ttl_intents = 86400             # 24 hours
ttl_order_by_tx_hash = 86400    # 24 hours

# ============================================================================
# ACCOUNT
# ============================================================================
[account]
primary = "local"

[account.implementations.local]
private_key = "0x5581f30e27236e3081742158a522194101de955481498401af66713e8bf8c468"

# ============================================================================
# DELIVERY
# ============================================================================
[delivery]
min_confirmations = 3  # Higher confirmations for testnets

[delivery.implementations.evm_alloy]
network_ids = [84532, 11155420]

# ============================================================================
# DISCOVERY
# ============================================================================
[discovery]

[discovery.implementations.onchain_eip7683]
network_ids = [84532, 11155420]
polling_interval_secs = 30  # Use WebSocket subscriptions instead of polling

[discovery.implementations.offchain_eip7683]
api_host = "127.0.0.1"
api_port = 8081
network_ids = [84532, 11155420]

# ============================================================================
# ORDER
# ============================================================================
[order]

[order.implementations.eip7683]

[order.strategy]
primary = "simple"

[order.strategy.implementations.simple]
max_gas_price_gwei = 100

# ============================================================================
# PRICING
# ============================================================================
[pricing]
primary = "coingecko"

[pricing.implementations.mock]
# Uses default ETH/USD price of 4615.16

[pricing.implementations.coingecko]
# Free tier configuration (no API key required)
# api_key = "CG-YOUR-API-KEY-HERE"
cache_duration_seconds = 60
rate_limit_delay_ms = 1200

# ============================================================================
# SETTLEMENT
# ============================================================================
[settlement]

[settlement.domain]
chain_id = 1
address = "0x557d6E91bAC4b2D36fB66f0231fF93db9810e203"

[settlement.implementations.direct]
order = "eip7683"
network_ids = [84532, 11155420]
dispute_period_seconds = 60
# Oracle selection strategy when multiple oracles are available (First, RoundRobin, Random)
oracle_selection_strategy = "First"

# Oracle configuration with multiple oracle support
[settlement.implementations.direct.oracles]
# Input oracles (on origin chains)
input = { 84532 = ["0xF92e489E524B19744DbB14f8e8daAdc43c50234d"], 11155420 = ["0xF92e489E524B19744DbB14f8e8daAdc43c50234d"] }
# Output oracles (on destination chains)
output = { 84532 = ["0xF92e489E524B19744DbB14f8e8daAdc43c50234d"], 11155420 = ["0xF92e489E524B19744DbB14f8e8daAdc43c50234d"] }

# Valid routes: from origin chain -> to destination chains
[settlement.implementations.direct.routes]
84532 = [11155420]  # Can go from origin to destination
11155420 = [84532]  # Can go from destination to origin

# ============================================================================
# DEMO SCRIPT CONFIGURATION
# The following sections are used by demo scripts (send_onchain_intent.sh, etc.)
# and are NOT required by the solver itself. The solver only needs the
# configurations above.
# ============================================================================

# Contract addresses for testing (used by demo scripts)
[contracts.origin]
USDC = "0x036CbD53842c5426634e7929541eC2318f3dCF7e"
permit2 = "0x000000000022D473030F116dDEE9F6B43aC78BA3"

[contracts.destination]
USDC = " 0x5fd84259d66Cd46123540766Be93DFE6D43130D7"
permit2 = "0x000000000022D473030F116dDEE9F6B43aC78BA3"

# Test accounts (used by demo scripts)
[accounts]
solver = "0xbe2D5EBF89baD8f8c92ED2382c16ECB90DD37be2"
user = "0xf1828Ea4C9480F87620E538c80b6134A2e611ea9"
user_private_key = "user_private_key"
recipient = "0x40C93020a2964dc79456443B938D0cA556117317"
